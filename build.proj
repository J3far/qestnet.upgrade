<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="SetVersion;RebuildAll" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets" />
  <Import Project="$(MSBuildExtensionsPath)\ExtensionPack\4.0\MSBuild.ExtensionPack.tasks" />

  <Target Name="SetVersion">

    <PropertyGroup Condition="'$(Version)' != ''">
      <MajorVersion>$([System.Text.RegularExpressions.Regex]::Match($(Version.Split('.')[0]), "\d+"))</MajorVersion>
      <MinorVersion>$([System.Text.RegularExpressions.Regex]::Match($(Version.Split('.')[1]), "\d+"))</MinorVersion>
    </PropertyGroup>
    
    <Error Condition="'$(MajorVersion)' == ''" Text="Error: MajorVersion not defined." />
    <Error Condition="'$(MinorVersion)' == ''" Text="Error: MinorVersion not defined." />

    <!-- Generate a days counter: will use this as revision instead -->
    <Version StartDate="1-JAN-2014" BuildType="Automatic" RevisionType="Automatic">
      <Output TaskParameter="Build" PropertyName="Build" />
      <Output TaskParameter="Revision" PropertyName="Revision" />
    </Version>

    <!-- Compile with the generated version number -->
    <MSBuild Projects="$(MSBuildProjectDirectory)\QESTNET.Upgrade\build.proj;"
             Targets="SetVersion"
             Properties="Configuration=Release;MajorVersion=$(MajorVersion);MinorVersion=$(MinorVersion);BuildVersion=$(Build);RevisionVersion=$(Revision)" />

    <!-- Set the version in the script manifest -->
    <FileUpdate
      Files="$(MSBuildProjectDirectory)\Scripts\database_upgrade.qn.manifest"
      Regex="#(\d+)\.(\d+)"
      ReplacementText="#$(MajorVersion).$(MinorVersion)"
      Multiline="true"
    />

    <!-- Tell the build server what the version number is -->
    <Message Text="##teamcity[buildNumber '$(MajorVersion).$(MinorVersion).$(Build).$(Revision)']" />
    
  </Target>
  
  <Target Name="RebuildAll">
    <MSBuild Projects="$(MSBuildProjectDirectory)\QESTNET.Upgrade\build.proj;"
             Targets="RebuildAll"
             Properties="Configuration=Release;" />
  </Target>

  <!-- Package the files to zip in the bin and Distribution -->
  <Target Name="Package">

    <MakeDir Directories="$(MSBuildProjectDirectory)\bin" />
    <MakeDir Directories="$(MSBuildProjectDirectory)\bin\$(Configuration)" />
    
    <PropertyGroup>
      <VersionText>$(MajorVersion).$(MinorVersion).$(Build).$(Revision)</VersionText>
      <PackagePath>$(MSBuildProjectDirectory)\bin\$(Configuration)\QESTNET.Upgrade v$(VersionText).zip</PackagePath>
    </PropertyGroup>

    <ItemGroup>
      <UpgraderFiles Include="
            $(MSBuildProjectDirectory)\QESTNET.Upgrade\bin\Release\QESTNET.Upgrade.dll;
            $(MSBuildProjectDirectory)\QESTNET.Upgrade\bin\Release\QESTNET.Upgrade.UI.exe;
            $(MSBuildProjectDirectory)\QESTNET.Upgrade\bin\Release\QESTNET.Upgrade.UI.exe.config;
      "/>
      <ScriptWriterFiles Include="
            $(MSBuildProjectDirectory)\QESTNET.Upgrade\bin\Release\QESTNET.Upgrade.ScriptWriter.dll;
            $(MSBuildProjectDirectory)\QESTNET.Upgrade\bin\Release\QESTNET.Upgrade.ScriptWriter.UI.exe;
            $(MSBuildProjectDirectory)\QESTNET.Upgrade\bin\Release\QESTNET.Upgrade.ScriptWriter.UI.exe.config;
      "/>
      <SqlServerFiles Include="
            $(MSBuildProjectDirectory)\Libraries\Microsoft.SqlServer\v11.0\*.dll
      "/>
      <ScriptFiles Include="
            $(MSBuildProjectDirectory)\Scripts\**\*.*
      "/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Compression.Zip
       TaskAction="Create"
       CompressFiles="@(UpgraderFiles)"
       RemoveRoot="$(MSBuildProjectDirectory)\QESTNET.Upgrade\bin\Release"
       ZipFileName="$(PackagePath)" />

    <MSBuild.ExtensionPack.Compression.Zip
       TaskAction="AddFiles"
       CompressFiles="@(ScriptFiles)"
       RemoveRoot="$(MSBuildProjectDirectory)"
       ZipFileName="$(PackagePath)" />

    <!-- Upload release version to distribution (no scriptwriter) -->
    <Copy Condition=" '$(Configuration)' == 'Release' " SourceFiles="$(PackagePath)" DestinationFiles="\\ADLS0003\Development\Product Distribution\QESTNET.Upgrade\QESTNET.Upgrade v$(MajorVersion).$(MinorVersion).zip" />

    <MSBuild.ExtensionPack.Compression.Zip
       TaskAction="AddFiles"
       CompressFiles="@(ScriptWriterFiles)"
       RemoveRoot="$(MSBuildProjectDirectory)\QESTNET.Upgrade\bin\Release"
       ZipFileName="$(PackagePath)" />

    <MSBuild.ExtensionPack.Compression.Zip
       TaskAction="AddFiles"
       CompressFiles="@(SqlServerFiles)"
       RemoveRoot="$(MSBuildProjectDirectory)\Libraries\Microsoft.SqlServer\v11.0"
       ZipFileName="$(PackagePath)" />
      
    <!-- Upload developer version to distribution (everything) -->
    <Copy SourceFiles="$(PackagePath)" DestinationFiles="\\ADLS0003\Development\Product Distribution\QESTNET.Upgrade\Builds\$(Configuration)\QESTNET.Upgrade v$(VersionText).zip" />

  </Target>
  

</Project>